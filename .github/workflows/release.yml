name: Release

permissions:
  contents: write

on:
  pull_request:
    types:
      - closed

jobs:
  create-release:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v') }}
    runs-on: ubuntu-latest

    steps:
      - name: Set version number
        id: set-version
        run: |
          echo "::set-output name=version::$(echo ${{ github.head_ref }} | sed -e 's#release/##g')"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set-version.outputs.version }}
          name: ${{ steps.set-version.outputs.version }}
          generate_release_notes: true
          files: ${{github.ref_name}}.tar.gz
  publish:
    needs: create-release
    if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v') }}
    name: Node.js ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest]

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout 🔔
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }} 🔧
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.3

      - name: Install dependencies 🧹
        run: pnpm install

      - name: Build 🔨
        run: pnpm build

      - name: Publish 🎁
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}